{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://ngx-quill/src/quill-defaults.ts","ng://ngx-quill/src/quill-editor.interfaces.ts","ng://ngx-quill/src/quill-editor.component.ts","ng://ngx-quill/src/quill-view-html.component.ts","ng://ngx-quill/src/quill-view.component.ts","ng://ngx-quill/src/quill.module.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","defaultModules","toolbar","header","list","script","indent","direction","size","color","background","font","align","QUILL_CONFIG_TOKEN","InjectionToken","Quill","getFormat","format","configFormat","QuillEditorComponent","elementRef","domSanitizer","doc","platformId","renderer","zone","config","_this","this","required","customToolbarPosition","sanitize","styles","strict","customOptions","preserveWhitespace","onEditorCreated","EventEmitter","onEditorChanged","onContentChanged","onSelectionChanged","onFocus","onBlur","disabled","valueGetter","quillEditor","editorElement","html","querySelector","innerHTML","modelValue","getText","getContents","JSON","stringify","e","valueSetter","value","SecurityContext","HTML","clipboard","convert","parse","insert","selectionChangeHandler","range","oldRange","source","run","emit","editor","onModelTouched","textChangeHandler","delta","oldDelta","text","content","editorElem","trackChanges","sources","USER","onModelChange","editorChangeHandler","event","current","old","text_1","content_1","html_1","normalizeClassNames","classes","trim","split","reduce","prev","cur","trimmed","push","prototype","_modelValue","ngAfterViewInit","isPlatformServer","require","nativeElement","insertAdjacentHTML","toolbarElem","modules","assign","undefined","placeholder","keys","forEach","setStyle","addClasses","customOption","newCustomOption","import","whitelist","register","bounds","body","debug","readOnly","scrollingContainer","formats","theme","setContents","setText","contents","history","clear","setDisabledState","on","setTimeout","ngOnDestroy","off","ngOnChanges","changes","enable","currentValue","root","dataset","currentStyling","previousStyling","previousValue","removeStyle","currentClasses","previousClasses","removeClasses","classList","QuillEditorComponent_1","addClass","removeClass","writeValue","isDisabled","disable","setAttribute","removeAttribute","registerOnChange","fn","registerOnTouched","validate","err","valid","textLength","minLength","minLengthError","given","maxLength","maxLengthError","requiredError","empty","tslib_1.__decorate","Input","Output","Component","encapsulation","ViewEncapsulation","None","providers","multi","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","NG_VALIDATORS","selector","template","tslib_1.__param","Inject","DOCUMENT","PLATFORM_ID","ElementRef","DomSanitizer","Renderer2","NgZone","QuillViewHTMLComponent","sanitizer","themeClass","bypassSecurityTrustHtml","QuillViewComponent","QuillModule","forRoot","ngModule","QuillModule_1","useValue","NgModule","declarations","exports","imports","CommonModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export const defaultModules = {\n  toolbar: [\n    ['bold', 'italic', 'underline', 'strike'], // toggled buttons\n    ['blockquote', 'code-block'],\n\n    [{ header: 1 }, { header: 2 }], // custom button values\n    [{ list: 'ordered' }, { list: 'bullet' }],\n    [{ script: 'sub' }, { script: 'super' }], // superscript/subscript\n    [{ indent: '-1' }, { indent: '+1' }], // outdent/indent\n    [{ direction: 'rtl' }], // text direction\n\n    [{ size: ['small', false, 'large', 'huge'] }], // custom dropdown\n    [{ header: [1, 2, 3, 4, 5, 6, false] }],\n\n    [\n      { color: [] },\n      { background: [] }\n    ], // dropdown with defaults from theme\n    [{ font: [] }],\n    [{ align: [] }],\n\n    ['clean'], // remove formatting button\n\n    ['link', 'image', 'video'] // link and image, video\n  ]\n}\n","import { InjectionToken } from '@angular/core'\n\nexport type QuillToolbarConfig = Array<Array<\n  string | {\n    indent?: string\n    list?: string\n    direction?: string\n    header?: number | Array<boolean | number>\n    color?: string[]\n    background?: string[]\n    align?: string[]\n    script?: string\n    font?: string[]\n    size?: Array<boolean | string>\n  }\n>>\n\nexport interface QuillModules {\n  [key: string]: any\n  clipboard?: {\n    matchers?: any[]\n    matchVisual?: boolean\n  } |Â boolean\n  history?: {\n    delay?: number\n    maxStack?: number\n    userOnly?: boolean\n  } |Â boolean\n  keyboard?: {\n    bindings?: any\n  } | boolean\n  syntax?: boolean\n  toolbar?: QuillToolbarConfig |Â string |Â {\n    container?: string | string[] | QuillToolbarConfig\n    handlers?: {\n      [key: string]: any\n    }\n  } |Â boolean\n}\n\nexport type QuillFormat = 'object' | 'json' | 'html' |Â 'text'\n\nexport interface QuillConfig {\n  bounds?: HTMLElement |Â string\n  debug?: 'error' | 'warn' | 'log' |Â false\n  format?: QuillFormat\n  formats?: any\n  modules?: QuillModules\n  placeholder?: string\n  readOnly?: boolean\n  scrollingContainer?: HTMLElement |Â string |Â null\n  theme?: string\n  // Custom Config to track all changes or only changes by 'user'\n  trackChanges?: 'user' | 'all'\n}\n\nexport const QUILL_CONFIG_TOKEN = new InjectionToken<QuillConfig>('config')\n","import {DOCUMENT, isPlatformServer} from '@angular/common'\nimport {DomSanitizer} from '@angular/platform-browser'\n\nimport {QUILL_CONFIG_TOKEN, QuillConfig, QuillFormat, QuillModules} from './quill-editor.interfaces'\n\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Output,\n  PLATFORM_ID,\n  Renderer2,\n  SecurityContext,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core'\n\nimport {ControlValueAccessor, NG_VALIDATORS, NG_VALUE_ACCESSOR, Validator} from '@angular/forms'\nimport {defaultModules} from './quill-defaults'\n\n// Because quill uses `document` directly, we cannot `import` during SSR\n// instead, we load dynamically via `require('quill')` in `ngAfterViewInit()`\ndeclare var require: any\n// tslint:disable-next-line:variable-name\nlet Quill: any = null\n\nexport interface CustomOption {\n  import: string\n  whitelist: any[]\n}\n\nexport interface Range {\n  index: number\n  length: number\n}\n\nconst getFormat = (format?: QuillFormat, configFormat?: QuillFormat): QuillFormat => {\n  const passedFormat = format || configFormat\n  return passedFormat || 'html'\n}\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      multi: true,\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => QuillEditorComponent)\n    },\n    {\n      multi: true,\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => QuillEditorComponent)\n    }\n  ],\n  selector: 'quill-editor',\n  template: `\n  <ng-content select=\"[quill-editor-toolbar]\"></ng-content>\n`\n})\nexport class QuillEditorComponent\n  implements AfterViewInit, ControlValueAccessor, OnChanges, OnDestroy, Validator {\n\n  static normalizeClassNames(classes: string): string[] {\n    const classList = classes.trim().split(' ')\n    return classList.reduce((prev: string[], cur: string) => {\n      const trimmed = cur.trim()\n      if (trimmed) {\n        prev.push(trimmed)\n      }\n\n      return prev\n    }, [])\n  }\n\n  quillEditor: any\n  editorElem: HTMLElement | undefined\n  content: any\n\n  @Input() format?: 'object' | 'html' | 'text' | 'json'\n  @Input() theme?: string\n  @Input() modules?: QuillModules\n  @Input() debug?: 'warn' |Â 'log' |Â 'error' |Â false\n  @Input() readOnly?: boolean\n  @Input() placeholder?: string\n  @Input() maxLength?: number\n  @Input() minLength?: number\n  @Input() required: boolean = false\n  @Input() formats?: string[] |Â null\n  @Input() customToolbarPosition: 'top' |Â 'bottom' = 'top'\n  @Input() sanitize: boolean = false\n  @Input() styles: any = null\n  @Input() strict: boolean = true\n  @Input() scrollingContainer?: HTMLElement | string | null\n  @Input() bounds?: HTMLElement | string\n  @Input() customOptions: CustomOption[] = []\n  @Input() trackChanges?: 'user' |Â 'all'\n  @Input() preserveWhitespace: boolean = false\n  @Input() classes?: string\n\n  @Output() onEditorCreated: EventEmitter<any> = new EventEmitter()\n  @Output() onEditorChanged: EventEmitter<{\n    content: any\n    delta: any\n    editor: any\n    event: 'text-change'\n    html: string | null\n    oldDelta: any\n    source: string\n    text: string\n  } |Â {\n    editor: any\n    event: 'selection-change'\n    oldRange: Range | null\n    range: Range |Â null\n    source: string\n  }> = new EventEmitter()\n  @Output() onContentChanged: EventEmitter<{\n    content: any\n    delta: any\n    editor: any\n    html: string | null\n    oldDelta: any\n    source: string\n    text: string\n  }> = new EventEmitter()\n  @Output() onSelectionChanged: EventEmitter<{\n    editor: any\n    oldRange: Range | null\n    range: Range |Â null\n    source: string\n  }> = new EventEmitter()\n  @Output() onFocus: EventEmitter<{\n    editor: any\n    source: string\n  }> = new EventEmitter()\n  @Output() onBlur: EventEmitter<{\n    editor: any\n    source: string\n  }> = new EventEmitter()\n\n  disabled = false // used to store initial value before ViewInit\n\n  constructor(\n    private elementRef: ElementRef,\n    private domSanitizer: DomSanitizer,\n    @Inject(DOCUMENT) private doc: any,\n    // tslint:disable-next-line:ban-types\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private renderer: Renderer2,\n    private zone: NgZone,\n    @Inject(QUILL_CONFIG_TOKEN) private config: QuillConfig\n  ) {}\n\n  // tslint:disable-next-line:no-empty\n  onModelChange(_modelValue?: any) {}\n  // tslint:disable-next-line:no-empty\n  onModelTouched() {}\n\n  @Input()\n  valueGetter = (quillEditor: any, editorElement: HTMLElement): string | anyÂ  => {\n    let html: string | null = editorElement.querySelector('.ql-editor')!.innerHTML\n    if (html === '<p><br></p>' || html === '<div><br><div>') {\n      html = null\n    }\n    let modelValue = html\n    const format = getFormat(this.format, this.config.format)\n\n    if (format === 'text') {\n      modelValue = quillEditor.getText()\n    } else if (format === 'object') {\n      modelValue = quillEditor.getContents()\n    } else if (format === 'json') {\n      try {\n        modelValue = JSON.stringify(quillEditor.getContents())\n      } catch (e) {\n        modelValue = quillEditor.getText()\n      }\n    }\n\n    return modelValue\n  }\n\n  @Input()\n  valueSetter = (quillEditor: any, value: any): any => {\n    const format = getFormat(this.format, this.config.format)\n    if (format === 'html') {\n      if (this.sanitize) {\n        value = this.domSanitizer.sanitize(SecurityContext.HTML, value)\n      }\n      return quillEditor.clipboard.convert(value)\n    } else if (format === 'json') {\n      try {\n        return JSON.parse(value)\n      } catch (e) {\n        return [{ insert: value }]\n      }\n    }\n\n    return value\n  }\n\n  ngAfterViewInit() {\n    if (isPlatformServer(this.platformId)) {\n      return\n    }\n    if (!Quill) {\n      Quill = require('quill')\n    }\n\n    this.elementRef.nativeElement.insertAdjacentHTML(\n      this.customToolbarPosition === 'top' ? 'beforeend' : 'afterbegin',\n      this.preserveWhitespace ? '<pre quill-editor-element></pre>' : '<div quill-editor-element></div>'\n    )\n\n    this.editorElem = this.elementRef.nativeElement.querySelector(\n      '[quill-editor-element]'\n    )\n\n    const toolbarElem = this.elementRef.nativeElement.querySelector(\n      '[quill-editor-toolbar]'\n    )\n    const modules = Object.assign({}, this.modules || (this.config.modules ||Â defaultModules))\n\n    if (toolbarElem) {\n      modules.toolbar = toolbarElem\n    } else if (modules.toolbar === undefined) {\n      modules.toolbar = defaultModules.toolbar\n    }\n\n    let placeholder = this.placeholder !== undefined ? this.placeholder : this.config.placeholder\n    if (placeholder === undefined) {\n      placeholder = 'Insert text here ...'\n    }\n\n    if (this.styles) {\n      Object.keys(this.styles).forEach((key: string) => {\n        this.renderer.setStyle(this.editorElem, key, this.styles[key])\n      })\n    }\n\n    if (this.classes) {\n      this.addClasses(this.classes)\n    }\n\n    this.customOptions.forEach((customOption) => {\n      const newCustomOption = Quill.import(customOption.import)\n      newCustomOption.whitelist = customOption.whitelist\n      Quill.register(newCustomOption, true)\n    })\n\n    let bounds = this.bounds && this.bounds === 'self' ? this.editorElem : this.bounds\n    if (!bounds) {\n      bounds = this.config.bounds ? this.config.bounds : this.doc.body\n    }\n\n    let debug = this.debug\n    if (!debug && debug !== false && this.config.debug) {\n      debug = this.config.debug\n    }\n\n    let readOnly = this.readOnly\n    if (!readOnly && this.readOnly !== false) {\n      readOnly = this.config.readOnly !== undefined ? this.config.readOnly : false\n    }\n\n    let scrollingContainer = this.scrollingContainer\n    if (!scrollingContainer && this.scrollingContainer !== null) {\n      scrollingContainer = this.config.scrollingContainer === null ||Â this.config.scrollingContainer ? this.config.scrollingContainer : null\n    }\n\n    let formats = this.formats\n    if (!formats && formats === undefined) {\n      formats = this.config.formats ? Object.assign({}, this.config.formats) :Â (this.config.formats === null ? null : undefined)\n    }\n\n    this.quillEditor = new Quill(this.editorElem, {\n      bounds,\n      debug,\n      formats,\n      modules,\n      placeholder,\n      readOnly,\n      scrollingContainer,\n      strict: this.strict,\n      theme: this.theme || (this.config.theme ? this.config.theme : 'snow')\n    })\n\n    if (this.content) {\n      const format = getFormat(this.format, this.config.format)\n      if (format === 'object') {\n        this.quillEditor.setContents(this.content, 'silent')\n      } else if (format === 'text') {\n        this.quillEditor.setText(this.content, 'silent')\n      } else if (format === 'json') {\n        try {\n          this.quillEditor.setContents(JSON.parse(this.content), 'silent')\n        } catch (e) {\n          this.quillEditor.setText(this.content, 'silent')\n        }\n      } else {\n        if (this.sanitize) {\n          this.content = this.domSanitizer.sanitize(SecurityContext.HTML, this.content)\n        }\n        const contents = this.quillEditor.clipboard.convert(this.content)\n        this.quillEditor.setContents(contents, 'silent')\n      }\n\n      this.quillEditor.history.clear()\n    }\n\n    // initialize disabled status based on this.disabled as default value\n    this.setDisabledState()\n\n    // triggered if selection or text changed\n    this.quillEditor.on(\n      'editor-change',\n      this.editorChangeHandler\n    )\n\n    // mark model as touched if editor lost focus\n    this.quillEditor.on(\n      'selection-change',\n      this.selectionChangeHandler\n    )\n\n    // update model if text changes\n    this.quillEditor.on(\n      'text-change',\n      this.textChangeHandler\n    )\n\n    // trigger created in a timeout to avoid changed models after checked\n    // if you are using the editor api in created output to change the editor content\n    setTimeout(() => this.onEditorCreated.emit(this.quillEditor))\n  }\n\n  selectionChangeHandler = (range: Range |Â null, oldRange: Range | null, source: string) => {\n    this.zone.run(() => {\n      if (range === null) {\n        this.onBlur.emit({\n          editor: this.quillEditor,\n          source\n        })\n      } else if (oldRange === null) {\n        this.onFocus.emit({\n          editor: this.quillEditor,\n          source\n        })\n      }\n\n      this.onSelectionChanged.emit({\n        editor: this.quillEditor,\n        oldRange,\n        range,\n        source\n      })\n\n      if (!range && this.onModelTouched) {\n        this.onModelTouched()\n      }\n    })\n  }\n\n  textChangeHandler = (delta: any, oldDelta: any, source: string): void => {\n    // only emit changes emitted by user interactions\n\n    const text = this.quillEditor.getText()\n    const content = this.quillEditor.getContents()\n\n    let html: string | null = this.editorElem!.querySelector('.ql-editor')!.innerHTML\n    if (html === '<p><br></p>' || html === '<div><br><div>') {\n      html = null\n    }\n\n    this.zone.run(() => {\n      const trackChanges = this.trackChanges ||Â this.config.trackChanges\n      if ((source === Quill.sources.USER || trackChanges && trackChanges === 'all') && this.onModelChange) {\n        this.onModelChange(\n          this.valueGetter(this.quillEditor, this.editorElem!)\n        )\n      }\n\n      this.onContentChanged.emit({\n        content,\n        delta,\n        editor: this.quillEditor,\n        html,\n        oldDelta,\n        source,\n        text\n      })\n    })\n  }\n\n  editorChangeHandler = (event: 'text-change' |Â 'selection-change', current: any |Â Range |Â null, old: any |Â Range | null, source: string): void => {\n    // only emit changes emitted by user interactions\n\n    if (event === 'text-change') {\n      const text = this.quillEditor.getText()\n      const content = this.quillEditor.getContents()\n\n      let html: string | null = this.editorElem!.querySelector('.ql-editor')!.innerHTML\n      if (html === '<p><br></p>' || html === '<div><br><div>') {\n        html = null\n      }\n\n      this.zone.run(() => {\n        this.onEditorChanged.emit({\n          content,\n          delta: current,\n          editor: this.quillEditor,\n          event,\n          html,\n          oldDelta: old,\n          source,\n          text\n        })\n      })\n    } else {\n      this.onEditorChanged.emit({\n        editor: this.quillEditor,\n        event,\n        oldRange: old,\n        range: current,\n        source\n      })\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.quillEditor) {\n      this.quillEditor.off('selection-change', this.selectionChangeHandler)\n      this.quillEditor.off('text-change', this.textChangeHandler)\n      this.quillEditor.off('editor-change', this.editorChangeHandler)\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.quillEditor) {\n      return\n    }\n    // tslint:disable:no-string-literal\n    if (changes['readOnly']) {\n      this.quillEditor.enable(!changes['readOnly'].currentValue)\n    }\n    if (changes['placeholder']) {\n      this.quillEditor.root.dataset.placeholder =\n        changes['placeholder'].currentValue\n    }\n    if (changes['styles']) {\n      const currentStyling = changes['styles'].currentValue\n      const previousStyling = changes['styles'].previousValue\n\n      if (previousStyling) {\n        Object.keys(previousStyling).forEach((key: string) => {\n          this.renderer.removeStyle(this.editorElem, key)\n        })\n      }\n      if (currentStyling) {\n        Object.keys(currentStyling).forEach((key: string) => {\n          this.renderer.setStyle(this.editorElem, key, this.styles[key])\n        })\n      }\n    }\n    if (changes['classes']) {\n      const currentClasses = changes['classes'].currentValue\n      const previousClasses = changes['classes'].previousValue\n\n      if (previousClasses) {\n        this.removeClasses(previousClasses)\n      }\n\n      if (currentClasses) {\n        this.addClasses(currentClasses)\n      }\n    }\n    // tslint:enable:no-string-literal\n  }\n\n  addClasses(classList: string): void {\n    QuillEditorComponent.normalizeClassNames(classList).forEach((c: string) => {\n      this.renderer.addClass(this.editorElem, c)\n    })\n  }\n\n  removeClasses(classList: string): void {\n    QuillEditorComponent.normalizeClassNames(classList).forEach((c: string) => {\n      this.renderer.removeClass(this.editorElem, c)\n    })\n  }\n\n  writeValue(currentValue: any) {\n    this.content = currentValue\n    const format = getFormat(this.format, this.config.format)\n\n    if (this.quillEditor) {\n      if (currentValue) {\n        if (format === 'text') {\n          this.quillEditor.setText(currentValue)\n        } else {\n          this.quillEditor.setContents(\n            this.valueSetter(this.quillEditor, this.content)\n          )\n        }\n        return\n      }\n      this.quillEditor.setText('')\n    }\n  }\n\n  setDisabledState(isDisabled: boolean = this.disabled): void {\n    // store initial value to set appropriate disabled status after ViewInit\n    this.disabled = isDisabled\n    if (this.quillEditor) {\n      if (isDisabled) {\n        this.quillEditor.disable()\n        this.renderer.setAttribute(this.elementRef.nativeElement, 'disabled', 'disabled')\n      } else {\n        if (!this.readOnly) {\n          this.quillEditor.enable()\n        }\n        this.renderer.removeAttribute(this.elementRef.nativeElement, 'disabled')\n      }\n    }\n  }\n\n  registerOnChange(fn: (modelValue: any) => void): void {\n    this.onModelChange = fn\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onModelTouched = fn\n  }\n\n  validate() {\n    if (!this.quillEditor) {\n      return null\n    }\n\n    const err: {\n      minLengthError?: {\n        given: number\n        minLength: number\n      }\n      maxLengthError?: {\n        given: number\n        maxLength: number\n      }\n      requiredError?: { empty: boolean }\n    } = {}\n    let valid = true\n\n    const textLength = this.quillEditor.getText().trim().length\n\n    if (this.minLength && textLength && textLength < this.minLength) {\n      err.minLengthError = {\n        given: textLength,\n        minLength: this.minLength\n      }\n\n      valid = false\n    }\n\n    if (this.maxLength && textLength > this.maxLength) {\n      err.maxLengthError = {\n        given: textLength,\n        maxLength: this.maxLength\n      }\n\n      valid = false\n    }\n\n    if (this.required && !textLength) {\n      err.requiredError = {\n        empty: true\n      }\n\n      valid = false\n    }\n\n    return valid ? null : err\n  }\n}\n","import { DomSanitizer, SafeHtml } from '@angular/platform-browser'\n\nimport { QUILL_CONFIG_TOKEN, QuillConfig } from './quill-editor.interfaces'\n\nimport {\n  Component,\n  Inject,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core'\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'quill-view-html',\n  styles: [`\n.ql-container.ngx-quill-view-html {\n  border: 0;\n}\n`],\n  template: `\n  <div class=\"ql-container\" [ngClass]=\"themeClass\">\n    <div class=\"ql-editor\" [innerHTML]=\"innerHTML\">\n    </div>\n  </div>\n`\n})\nexport class QuillViewHTMLComponent implements OnChanges {\n  innerHTML: SafeHtml = ''\n  themeClass: string = 'ql-snow'\n\n  @Input() content: string = ''\n  @Input() theme?: string\n\n  constructor(\n    private sanitizer: DomSanitizer,\n    @Inject(QUILL_CONFIG_TOKEN) private config: QuillConfig\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.theme) {\n      const theme = changes.theme.currentValue || (this.config.theme ? this.config.theme : 'snow')\n      this.themeClass = `ql-${theme} ngx-quill-view-html`\n    } else if (!this.theme) {\n      const theme = this.config.theme ? this.config.theme : 'snow'\n      this.themeClass = `ql-${theme} ngx-quill-view-html`\n    }\n    if (changes.content) {\n      this.innerHTML = this.sanitizer.bypassSecurityTrustHtml(changes.content.currentValue)\n    }\n  }\n}\n","import { isPlatformServer } from '@angular/common'\n\nimport { QUILL_CONFIG_TOKEN, QuillConfig, QuillFormat, QuillModules } from './quill-editor.interfaces'\n\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  Inject,\n  Input,\n  OnChanges,\n  PLATFORM_ID,\n  Renderer2,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core'\n\nimport { defaultModules } from './quill-defaults'\nimport { CustomOption } from './quill-editor.component'\n\n// Because quill uses `document` directly, we cannot `import` during SSR\n// instead, we load dynamically via `require('quill')` in `ngAfterViewInit()`\ndeclare var require: any\n// tslint:disable-next-line:variable-name\nlet Quill: any = null\n\nconst getFormat = (format?: QuillFormat, configFormat?: QuillFormat): QuillFormat => {\n  const passedFormat = format || configFormat\n  return passedFormat || 'html'\n}\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'quill-view',\n  styles: [`\n.ql-container.ngx-quill-view {\n  border: 0;\n}\n`],\n  template: `\n`\n})\nexport class QuillViewComponent implements AfterViewInit, OnChanges {\n  quillEditor: any\n  editorElem: HTMLElement | undefined\n\n  @Input() format?: 'object' | 'html' | 'text' | 'json'\n  @Input() theme?: string\n  @Input() modules?: QuillModules\n  @Input() debug?: 'warn' |Â 'log' |Â 'error' |Â false\n  @Input() formats?: string[] |Â null\n  @Input() strict: boolean = true\n  @Input() content: any\n  @Input() customOptions: CustomOption[] = []\n  @Input() preserveWhitespace: boolean = false\n\n  constructor(\n    // tslint:disable-next-line:ban-types\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Inject(QUILL_CONFIG_TOKEN) private config: QuillConfig,\n    private renderer: Renderer2,\n    private elementRef: ElementRef\n  ) {}\n\n  valueSetter = (quillEditor: any, value: any): any => {\n    const format = getFormat(this.format, this.config.format)\n    let content = value\n    if (format === 'html' ||Â format === 'text') {\n      content = quillEditor.clipboard.convert(value)\n    } else if (format === 'json') {\n      try {\n        content = JSON.parse(value)\n      } catch (e) {\n        content = [{ insert: value }]\n      }\n    }\n    quillEditor.setContents(content)\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.quillEditor) {\n      return\n    }\n    if (changes.content) {\n      this.valueSetter(this.quillEditor, changes.content.currentValue)\n    }\n  }\n\n  ngAfterViewInit() {\n    if (isPlatformServer(this.platformId)) {\n      return\n    }\n    if (!Quill) {\n      Quill = require('quill')\n    }\n\n    const modules = Object.assign({}, this.modules || (this.config.modules ||Â defaultModules))\n    modules.toolbar = false\n\n    this.customOptions.forEach((customOption) => {\n      const newCustomOption = Quill.import(customOption.import)\n      newCustomOption.whitelist = customOption.whitelist\n      Quill.register(newCustomOption, true)\n    })\n\n    let debug = this.debug\n    if (!debug && debug !== false && this.config.debug) {\n      debug = this.config.debug\n    }\n\n    let formats = this.formats\n    if (!formats && formats === undefined) {\n      formats = this.config.formats ? Object.assign({}, this.config.formats) :Â (this.config.formats === null ? null : undefined)\n    }\n    const theme = this.theme || (this.config.theme ? this.config.theme : 'snow')\n\n    this.elementRef.nativeElement.insertAdjacentHTML(\n      'afterbegin',\n      this.preserveWhitespace ? '<pre quill-view-element></pre>' : '<div quill-view-element></div>'\n    )\n\n    this.editorElem = this.elementRef.nativeElement.querySelector(\n      '[quill-view-element]'\n    )\n\n    this.quillEditor = new Quill(this.editorElem, {\n      debug,\n      formats,\n      modules,\n      readOnly: true,\n      strict: this.strict,\n      theme\n    })\n\n    this.renderer.addClass(this.editorElem, 'ngx-quill-view')\n\n    if (this.content) {\n      this.valueSetter(this.quillEditor, this.content)\n    }\n  }\n}\n","import { CommonModule } from '@angular/common'\nimport { ModuleWithProviders, NgModule } from '@angular/core'\n\nimport { defaultModules } from './quill-defaults'\nimport { QuillEditorComponent } from './quill-editor.component'\nimport { QUILL_CONFIG_TOKEN, QuillConfig } from './quill-editor.interfaces'\nimport { QuillViewHTMLComponent } from './quill-view-html.component'\nimport { QuillViewComponent } from './quill-view.component'\n\n@NgModule({\n  declarations: [\n    QuillEditorComponent,\n    QuillViewComponent,\n    QuillViewHTMLComponent\n  ],\n  exports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent],\n  imports: [CommonModule],\n  providers: []\n})\nexport class QuillModule {\n  static forRoot(config?: QuillConfig): ModuleWithProviders {\n    return {\n      ngModule: QuillModule,\n      providers: [\n        {\n          provide: QUILL_CONFIG_TOKEN,\n          // tslint:disable-next-line:only-arrow-functions\n          useValue: config ||Â {Â modules: defaultModules }\n        }\n      ]\n    }\n  }\n}\n"]}